<?xml version="1.0" encoding="UTF-8" ?>
<!--
 Licensed to OpenCommerceSearch under one
 or more contributor license agreements. See the NOTICE file
 distributed with this work for additional information
 regarding copyright ownership. OpenCommerceSearch licenses this
 file to you under the Apache License, Version 2.0 (the
 "License"); you may not use this file except in compliance
 with the License. You may obtain a copy of the License at

 http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing,
 software distributed under the License is distributed on an
 "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 KIND, either express or implied. See the License for the
 specific language governing permissions and limitations
 under the License.
-->

<schema name="productCatalog" version="1.4">
  <types>
    <!-- A text field with defaults appropriate for English, plus
    aggressive word-splitting and autophrase features enabled.
    This field is just like text_en, except it adds
    WordDelimiterFilter to enable splitting and matching of
    words on case-change, alpha numeric boundaries, and
    non-alphanumeric chars.  This means certain compound word
    cases will work, for example query "wi fi" will match
    document "WiFi" or "wi-fi".  However, other cases will still
    not match, for example if the query is "wifi" and the
    document is "wi fi" or if the query is "wi-fi" and the
    document is "wifi".
    -->
    <fieldType name="text_en_splitting" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer type="index">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt" />
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="1"
                catenateNumbers="1"
                catenateAll="0"
                splitOnCaseChange="0"
                splitOnNumerics="1"
                stemEnglishPossessive="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords_en.txt"/>
        <filter class="solr.StemmerOverrideFilterFactory" dictionary="stem/en_US.txt" />
        <filter class="solr.HunspellStemFilterFactory"
            dictionary="hunspell/en_US.dic,hunspell/custom_en_US.dic"
            affix="hunspell/en_US.aff"
            ignoreCase="true" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms-${solr.env.dir:preview}/index_synonyms.txt" ignoreCase="true" expand="true"/>
      </analyzer>
      <analyzer type="query">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt" />
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="0"
                catenateNumbers="0"
                catenateAll="0"
                splitOnCaseChange="0"
                splitOnNumerics="1"
                stemEnglishPossessive="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
        <filter class="solr.KeywordMarkerFilterFactory" protected="protwords_en.txt"/>
        <filter class="solr.StemmerOverrideFilterFactory" dictionary="stem/en_US.txt" />
        <filter class="solr.HunspellStemFilterFactory"
            dictionary="hunspell/en_US.dic,hunspell/custom_en_US.dic"
            affix="hunspell/en_US.aff"
            ignoreCase="true" />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms-${solr.env.dir:preview}/query_synonyms.txt" ignoreCase="true" expand="true"/>
      </analyzer>
    </fieldType>
    <fieldType name="text_en_spellcheck" class="solr.TextField" positionIncrementGap="100" autoGeneratePhraseQueries="true">
      <analyzer type="index">
        <charFilter class="solr.MappingCharFilterFactory" mapping="mapping-ISOLatin1Accent.txt" />
        <tokenizer class="solr.WhitespaceTokenizerFactory"/>
        <filter class="solr.StopFilterFactory"
                ignoreCase="true"
                words="stopwords_en.txt"
                enablePositionIncrements="true"
                />
        <filter class="solr.SynonymFilterFactory" synonyms="synonyms-${solr.env.dir:preview}/index_synonyms.txt" ignoreCase="true" expand="true"/>
        <filter class="solr.WordDelimiterFilterFactory"
                generateWordParts="1"
                generateNumberParts="1"
                catenateWords="1"
                catenateNumbers="1"
                catenateAll="0"
                splitOnCaseChange="0"
                splitOnNumerics="1"
                stemEnglishPossessive="1"/>
        <filter class="solr.LowerCaseFilterFactory"/>
      </analyzer>
    </fieldType>
  </types>



  <xi:include href="xinclude/field_types.xml" parse="xml"
    xmlns:xi="http://www.w3.org/2001/XInclude">
  </xi:include>

  <xi:include href="xinclude/fields.xml" parse="xml"
    xmlns:xi="http://www.w3.org/2001/XInclude">
  </xi:include>

  <fields>
    <!-- catchall field, containing all other searchable text fields (implemented
      via copyField further on in this schema  -->
    <field name="text"           type="text_en_splitting"  indexed="true" stored="false" multiValued="true"  omitNorms="false" />
    <field name="brandText"      type="text_en_splitting"  indexed="true" stored="false" multiValued="true"  omitNorms="false" />
    <field name="textSpellCheck" type="text_en_spellcheck" indexed="true" stored="false" multiValued="true"  omitNorms="true" />
    <field name="keyword"        type="text_en_splitting"  indexed="true" stored="false" multiValued="false" omitNorms="true" />

    <!-- boosting fields -->
    <field name="highest" type="text_en_splitting" indexed="true"  stored="false" required="false" multiValued="true" omitNorms="false" />
    <field name="high"    type="text_en_splitting" indexed="true"  stored="false" required="false" multiValued="true" omitNorms="false" />
    <field name="medium"  type="text_en_splitting" indexed="true"  stored="false" required="false" multiValued="true" omitNorms="false" />
    <field name="low"     type="text_en_splitting" indexed="true"  stored="false" required="false" multiValued="true" omitNorms="false" />
    <field name="lowest"  type="text_en_splitting" indexed="true"  stored="false" required="false" multiValued="true" omitNorms="false" />
  </fields>

  <!-- Field to use to determine and enforce document uniqueness.
      Unless this field is marked with required="false", it will be a required field
   -->
  <uniqueKey>id</uniqueKey>

  <!-- field for the QueryParser to use when an explicit fieldname is absent -->
  <!--<defaultSearchField>text</defaultSearchField>-->

  <!-- SolrQueryParser configuration: defaultOperator="AND|OR" -->
  <solrQueryParser defaultOperator="AND"/>

  <copyField source="title" dest="text"/>
  <copyField source="brand" dest="text"/>
  <copyField source="brand" dest="brandText"/>

  <!-- highest -->

  <!-- high -->
  <copyField source="year" dest="high"/>

  <!-- medium -->
  <copyField source="categoryLeaves" dest="medium"/>
  <copyField source="colorFamily"    dest="medium"/>

  <!-- low -->
  <copyField source="categoryNodes"  dest="low"/>
  <copyField source="size"           dest="low"/>

  <!-- lowest -->
  <copyField source="ha_*"          dest="lowest"/>
  <copyField source="attr_*"        dest="lowest"/>
  <copyField source="feature_*"     dest="lowest"/>

  <!-- spell checking -->
  <copyField source="title"          dest="textSpellCheck"/>
  <copyField source="brand"          dest="textSpellCheck"/>
  <copyField source="categoryLeaves" dest="textSpellCheck"/>
  <copyField source="categoryNodes"  dest="textSpellCheck"/>
  <copyField source="size"           dest="textSpellCheck"/>
  <copyField source="colorFamily"    dest="textSpellCheck"/>
  <copyField source="ha_*"           dest="textSpellCheck"/>
  <copyField source="attr_*"         dest="textSpellCheck"/>
  <copyField source="feature_*"      dest="textSpellCheck"/>

  <!-- other -->
  <copyField source="brand" dest="sBrand"/>
  <copyField source="brand" dest="pBrand"/>
  <copyField source="title" dest="keyword"/>

</schema>
